---
layout: getting_started
title: 1 Elixir interativo
guide: 1
---

# {{ page.title }}

Bem vindo!

Neste tutorial vamos mostrar para você como iniciar com Elixir. Este capítulo
cobrirá a instalação e como iniciar o uso do shell interativo do Elixir chamado
IEx.

Se você encontrar qualquer erro neste tutorial ou no website, [por favor reporte um bug ou envie uma pull request para o nosso issue tracker](https://github.com/elixir-lang/elixir-lang.github.com). Se você suspeita que é um bug da linguagem, [por favor informe-nos no issue tracker da linguagem](https://github.com/elixir-lang/elixir/issues).

Vamos começar!

## 1.1 Instalando Erlang

O único pre-requisito para a Elixir é a Erlang, versão 17.0 ou superior, que
pode ser facilmente instalado com [pacotes pre-compilados](https://www.erlang-solutions.com/downloads/download-erlang-otp). Caso você queira instalá-la diretamente do código-fonte, ele pode ser encontrado [no website da Erlang](http://www.erlang.org/download.html) ou seguindo este excelente tutorial disponível na [documentação do Riak](http://docs.basho.com/riak/1.3.0/tutorials/installation/Installing-Erlang/).

Para os desenvolvedores Windows, recomendamos os pacotes pré-compilados. Aqueles
que utilizam plataforma UNIX podem, provavelmente, instalar a Erlang através dos
muitos gerenciadores de pacotes.

> Nota: Embora muitos gerenciadores de pacotes disponibilizam a Erlang, Elixir requer Erlang versão 17 que foi lançada recentemente. Tenha em mente isto antes de escolher sua instalação Erlang.

Após a Erlang ser instalada, você deveria ser capaz de abrir a linha de comando (ou prompt de comando) a checar a versão da Erlang instalada digitando `erl`. Você verá uma informação como esta:

    Erlang/OTP 17 [erts-6.0] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false]

Note que dependendo de como você instalou a Erlang, seus binários podem não
estar disponíveis no PATH. Tenha certeza que você possui os binarios da Erlang
em seu [PATH](http://pt.wikipedia.org/wiki/Vari%C3%A1vel_de_ambiente), do contrário Elixir não funcionará!

Uma vez que a Erlang estiver funcionando, é hora de instalar a Elixir. Você pode
fazer isto utilizando distribuições, pacotes pré-compilados ou compilando a
partir do código-fonte.

### 1.2 Distribuições

Este tutorial requer Elixir v0.13 ou superior e ele pode estar disponível em
algumas distribuiçoes:

* Homebrew para Mac OS X
  * Atualize seu homebrew para a última versão com `brew update`
  * Instale Elixir: `brew install elixir`
* Fedora 17+ e Fedora Rawhide
  * `sudo yum -y install elixir`
* Arch Linux (AUR)
  * `yaourt -S elixir`
* openSUSE (e SLES 11 SP3+)
  * Adicione o repositório de desenvolvimento com `zypper ar -f obs://devel:languages:erlang/ erlang`
  * Instale Elixir: `zypper in elixir`
* Gentoo
  * `emerge --ask dev-lang/elixir`
* Chocolatey para Windows
  * `cinst elixir`

Se você não utiliza qualquer distribuição destas acima, não se preocupe, nõs
também fornecemos pacotes pré-compilados.

### 1.3 Pacotes pré-compilados

Elixir fornece um [pacote pré-compilado para cada lançamento](https://github.com/elixir-lang/elixir/releases/). Após baixar e descompactar o pacote, você está pronto para executar os comandos `elixir` e `iex` a partir do diretório `bin`. É recomendável que vocẽ adicione o caminho para o diretório `bin` do Elixir em sua variável de ambiente PATH para facilitar o desenvolvimento.

### 1.4 Compilando a partir do código-fonta (Unix e MinGW)

Você pode baixar e compilar Elixir em poucos passos. Você pode obter a [última
versão estável aqui](https://github.com/elixir-lang/elixir/releases/), descompactá-la e então executar `make` dentro do diretório descompactado. Depois disto, você está pronto para executar os comandos `elixir` e `iex` a partir do diretório `bin`. É recomendável que vocẽ adicione o caminho para o diretório `bin` do Elixir em sua variável de ambiente PATH para facilitar o desenvolvimento.

    $ export PATH="$PATH:/path/to/elixir/bin"

Caso você esteja se sentindo um pouco aventureiro, você também pode compilar a
partir do master:

    $ git clone https://github.com/elixir-lang/elixir.git
    $ cd elixir
    $ make clean test

Se os testes passarem, você está pronto para continuar. Do contrário, esteja livre para abrir uma issue [no issue tracker no Github](https://github.com/elixir-lang/elixir).

## 1.5 Modo interativo

Quando você instala Elixir, você tem três novos executáveis: `iex`, `elixir` e `elixirc`. Se você compilou Elixir a partir do código fonte ou está utilizando uma versão empacotada, você pode encontrar estes executáveis no diretório `bin`.

Por hora, vamos iniciar executando `iex` que significa, em inglês, "interactive
Elixir", ou seja, Elixir interativo. Neste modo interativo, podemos entrar com qualquer expressão Elixir e obter seus resulstados imediatamente. Vamos aquecer com algumas expressões básicas:

```text
Interactive Elixir - press Ctrl+C to exit (type h() ENTER for help)

iex> 40 + 2
42
iex> "ola" <> " mundo"
"ola mundo"
```

Parece que estamos prontos para continuar! Nós utilizaremos bastante este shell interativo nos próximos capítulos para nos familiarizarmos com as construções da linguagem e seus tipos básicos, iniciando no próximo capítulo.
